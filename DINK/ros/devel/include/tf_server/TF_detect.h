// Generated by gencpp from file tf_server/TF_detect.msg
// DO NOT EDIT!


#ifndef TF_SERVER_MESSAGE_TF_DETECT_H
#define TF_SERVER_MESSAGE_TF_DETECT_H

#include <ros/service_traits.h>


#include <tf_server/TF_detectRequest.h>
#include <tf_server/TF_detectResponse.h>


namespace tf_server
{

struct TF_detect
{

typedef TF_detectRequest Request;
typedef TF_detectResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct TF_detect
} // namespace tf_server


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::tf_server::TF_detect > {
  static const char* value()
  {
    return "1a77a8e744b0dc74b1f88098038a0bc3";
  }

  static const char* value(const ::tf_server::TF_detect&) { return value(); }
};

template<>
struct DataType< ::tf_server::TF_detect > {
  static const char* value()
  {
    return "tf_server/TF_detect";
  }

  static const char* value(const ::tf_server::TF_detect&) { return value(); }
};


// service_traits::MD5Sum< ::tf_server::TF_detectRequest> should match 
// service_traits::MD5Sum< ::tf_server::TF_detect > 
template<>
struct MD5Sum< ::tf_server::TF_detectRequest>
{
  static const char* value()
  {
    return MD5Sum< ::tf_server::TF_detect >::value();
  }
  static const char* value(const ::tf_server::TF_detectRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::tf_server::TF_detectRequest> should match 
// service_traits::DataType< ::tf_server::TF_detect > 
template<>
struct DataType< ::tf_server::TF_detectRequest>
{
  static const char* value()
  {
    return DataType< ::tf_server::TF_detect >::value();
  }
  static const char* value(const ::tf_server::TF_detectRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::tf_server::TF_detectResponse> should match 
// service_traits::MD5Sum< ::tf_server::TF_detect > 
template<>
struct MD5Sum< ::tf_server::TF_detectResponse>
{
  static const char* value()
  {
    return MD5Sum< ::tf_server::TF_detect >::value();
  }
  static const char* value(const ::tf_server::TF_detectResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::tf_server::TF_detectResponse> should match 
// service_traits::DataType< ::tf_server::TF_detect > 
template<>
struct DataType< ::tf_server::TF_detectResponse>
{
  static const char* value()
  {
    return DataType< ::tf_server::TF_detect >::value();
  }
  static const char* value(const ::tf_server::TF_detectResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TF_SERVER_MESSAGE_TF_DETECT_H
